name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

permissions:
  contents: read
  pull-requests: write

jobs:
  tests:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: test
        run: npm test
        continue-on-error: true

      - name: Upload coverage artifacts (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: |
            coverage/**
            coverage.*/**
          if-no-files-found: warn
          retention-days: 30

      - name: Tests summary (success)
        if: steps.test.outcome == 'success'
        run: |
          {
            echo "### Tests Passed ✅";
            echo "";
            echo "Coverage artifacts (if generated) were uploaded and retained for 30 days.";
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Annotate test failures
        if: steps.test.outcome == 'failure'
        run: |
          echo "::error title=Tests failed::See 'Run tests' step logs for details. Re-run locally with 'npm test'."
          {
            echo "### Tests Failed ❌";
            echo "";
            echo "Review the logs in the 'Run tests' step. Reproduce locally with:";
            echo "";
            echo "```bash";
            echo "NODE_ENV=test NODE_OPTIONS=--experimental-vm-modules DATABASE_URL={{DATABASE_URL}} npm test";
            echo "```";
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Fail job if tests failed
        if: steps.test.outcome == 'failure'
        run: exit 1
